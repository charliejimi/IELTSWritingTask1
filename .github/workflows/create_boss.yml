name: Create Boss Milestone

# 手動觸發 workflow，並定義輸入參數
on:
  workflow_dispatch:
    inputs:
      boss_name:
        description: '魔王名稱'
        required: true
        type: string
      level:
        description: '魔王等級'
        required: true
        type: string # 為了統一處理，通常等級也會設為 string

jobs:
  create_milestone:
    runs-on: ubuntu-latest
    steps:
      - name: Create Milestone
        # 使用 actions/github-script 執行 API 呼叫
        uses: actions/github-script@v7 # 推薦使用最新版本
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 修正：從 context.payload.inputs 取得 workflow_dispatch 的輸入參數
            const boss = context.payload.inputs.boss_name;
            const level = context.payload.inputs.level;

            // 組裝里程碑的標題
            const title = `[Boss] ${boss} Lv.${level} Challenge`;

            // 組裝里程碑的描述 (使用 Markdown 格式)
            // 修正：改用字串拼接 (避免 YAML 解析器將多行模板字串中的特殊字符 (${...}) 誤判為 YAML 語法錯誤)
            const description = 
              "### 🎯 魔王名稱\n" +
              `${boss} Boss\n\n` +
              "### 🧩 錯誤描述\n" +
              "- 典型表現: ...\n" +
              "- 錯誤示例: ...\n" +
              "- 根本原因: ...\n\n" +
              "### 🎯 改進目標\n" +
              "- Band 7: ...\n" +
              "- Band 8: ...\n" +
              "- Band 9: ...\n\n" +
              "### 📘 Wiki 連結\n" +
              `[Wiki Page](../../wiki/Boss/${boss}Boss)\n\n` +
              "### ✅ 完成條件\n" +
              "- 分析三篇舊作\n" +
              "- 撰寫修正版\n" +
              "- 自評達標\n" +
              "- 更新 Wiki\n\n" +
              "### 🧮 EXP 與評價紀錄\n" +
              "- 時間投入\n" +
              "- 認知負荷\n" +
              "- 輸出強度";
            
            // 呼叫 GitHub REST API 創建里程碑
            await github.rest.issues.createMilestone({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              description: description
            });

            console.log(`成功創建里程碑: ${title}`);